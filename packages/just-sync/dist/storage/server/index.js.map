{"version":3,"sources":["../../../src/storage/server/index.ts"],"sourcesContent":["import type { DatabaseAdapter, PrimaryKey, SelectWindow } from '../../index.js';\nimport { ulid } from 'ulid';\n\ntype Row = Record<string, unknown> & { id?: string; updatedAt?: number; version?: number };\n\nfunction pkCanon(pk: PrimaryKey): string {\n  if (typeof pk === 'string' || typeof pk === 'number') return String(pk);\n  return Object.keys(pk).sort().map((k) => `${k}=${String((pk as any)[k])}`).join('|');\n}\n\nexport function sqliteAdapter(opts: { url: string }): DatabaseAdapter {\n  // MVP: provide an in-memory JS shim so library is usable without native deps; warn that this is not persistent.\n  const tables = new Map<string, Map<string, Row>>();\n  const versions = new Map<string, Map<string, number>>(); // _sync_versions\n  function ensure(table: string) { if (!tables.has(table)) tables.set(table, new Map()); return tables.get(table)!; }\n  function ensureVer(table: string) { if (!versions.has(table)) versions.set(table, new Map()); return versions.get(table)!; }\n  let inTx = false;\n  return {\n    async begin() { if (inTx) throw Object.assign(new Error('Nested tx not supported'), { code: 'INTERNAL' }); inTx = true; },\n    async commit() { inTx = false; },\n    async rollback() { inTx = false; },\n    async insert(table, row) {\n      const m = ensure(table);\n      const v = ensureVer(table);\n      const now = Date.now();\n      const id = (row as any).id && typeof (row as any).id === 'string' ? (row as any).id : ulid();\n      const key = pkCanon(id);\n      if (m.has(key)) throw Object.assign(new Error('Unique conflict'), { code: 'CONFLICT', details: { constraint: 'unique', column: 'id' } });\n      const version = (v.get(key) ?? 0) + 1;\n      v.set(key, version);\n      const record: Row = { ...(row as any), id, updatedAt: now, version };\n      m.set(key, record);\n      return record;\n    },\n    async updateByPk(table, pk, set, opts) {\n      const m = ensure(table);\n      const v = ensureVer(table);\n      const key = pkCanon(pk);\n      const existing = m.get(key);\n      if (!existing) throw Object.assign(new Error('Not found'), { code: 'NOT_FOUND', details: { pk } });\n      const now = Date.now();\n      const currentVersion = v.get(key) ?? existing.version ?? 0;\n      if (opts?.ifVersion != null && opts.ifVersion !== currentVersion) {\n        throw Object.assign(new Error('Version mismatch'), { code: 'CONFLICT', details: { expectedVersion: opts.ifVersion, actualVersion: currentVersion } });\n      }\n      const version = currentVersion + 1;\n      v.set(key, version);\n      const updated = { ...existing, ...set, updatedAt: now, version } as Row;\n      m.set(key, updated);\n      return updated;\n    },\n    async deleteByPk(table, pk) {\n      const m = ensure(table);\n      const v = ensureVer(table);\n      const key = pkCanon(pk);\n      if (!m.has(key)) throw Object.assign(new Error('Not found'), { code: 'NOT_FOUND', details: { pk } });\n      m.delete(key);\n      v.delete(key);\n      return { ok: true } as const;\n    },\n    async selectByPk(table, pk, select) {\n      const m = ensure(table);\n      const row = m.get(pkCanon(pk)) ?? null;\n      if (!row) return null;\n      if (!select || select.length === 0) return { ...row };\n      const out: Record<string, unknown> = {};\n      for (const f of select) out[f] = (row as any)[f];\n      return out as any;\n    },\n    async selectWindow(table, req) {\n      const m = ensure(table);\n      const all = Array.from(m.values());\n      // MVP: ignore where (client-side), simple order and limit\n      const order = req.orderBy ?? { updatedAt: 'desc' };\n      const keys = Object.keys(order);\n      all.sort((a, b) => {\n        for (const k of keys) {\n          const dir = order[k] === 'asc' ? 1 : -1;\n          const av = (a as any)[k];\n          const bv = (b as any)[k];\n          if (av === bv) continue;\n          return av > bv ? dir : -dir;\n        }\n        // tie-breaker by id\n        const aid = String((a as any).id ?? '');\n        const bid = String((b as any).id ?? '');\n        return aid.localeCompare(bid);\n      });\n      const limit = Math.min(1000, Math.max(1, req.limit ?? 100));\n      const data = all.slice(0, limit).map((r) => {\n        if (!req.select || req.select.length === 0) return r;\n        const o: Record<string, unknown> = {};\n        for (const f of req.select) o[f] = (r as any)[f];\n        return o as any;\n      });\n      return { data, nextCursor: null };\n    }\n  } as DatabaseAdapter;\n}\n\n"],"mappings":";;;AACA,SAAS,YAAY;AAIrB,SAAS,QAAQ,IAAwB;AACvC,MAAI,OAAO,OAAO,YAAY,OAAO,OAAO,SAAU,QAAO,OAAO,EAAE;AACtE,SAAO,OAAO,KAAK,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,OAAQ,GAAW,CAAC,CAAC,CAAC,EAAE,EAAE,KAAK,GAAG;AACrF;AAEO,SAAS,cAAc,MAAwC;AAEpE,QAAM,SAAS,oBAAI,IAA8B;AACjD,QAAM,WAAW,oBAAI,IAAiC;AACtD,WAAS,OAAO,OAAe;AAAE,QAAI,CAAC,OAAO,IAAI,KAAK,EAAG,QAAO,IAAI,OAAO,oBAAI,IAAI,CAAC;AAAG,WAAO,OAAO,IAAI,KAAK;AAAA,EAAI;AAClH,WAAS,UAAU,OAAe;AAAE,QAAI,CAAC,SAAS,IAAI,KAAK,EAAG,UAAS,IAAI,OAAO,oBAAI,IAAI,CAAC;AAAG,WAAO,SAAS,IAAI,KAAK;AAAA,EAAI;AAC3H,MAAI,OAAO;AACX,SAAO;AAAA,IACL,MAAM,QAAQ;AAAE,UAAI,KAAM,OAAM,OAAO,OAAO,IAAI,MAAM,yBAAyB,GAAG,EAAE,MAAM,WAAW,CAAC;AAAG,aAAO;AAAA,IAAM;AAAA,IACxH,MAAM,SAAS;AAAE,aAAO;AAAA,IAAO;AAAA,IAC/B,MAAM,WAAW;AAAE,aAAO;AAAA,IAAO;AAAA,IACjC,MAAM,OAAO,OAAO,KAAK;AACvB,YAAM,IAAI,OAAO,KAAK;AACtB,YAAM,IAAI,UAAU,KAAK;AACzB,YAAM,MAAM,KAAK,IAAI;AACrB,YAAM,KAAM,IAAY,MAAM,OAAQ,IAAY,OAAO,WAAY,IAAY,KAAK,KAAK;AAC3F,YAAM,MAAM,QAAQ,EAAE;AACtB,UAAI,EAAE,IAAI,GAAG,EAAG,OAAM,OAAO,OAAO,IAAI,MAAM,iBAAiB,GAAG,EAAE,MAAM,YAAY,SAAS,EAAE,YAAY,UAAU,QAAQ,KAAK,EAAE,CAAC;AACvI,YAAM,WAAW,EAAE,IAAI,GAAG,KAAK,KAAK;AACpC,QAAE,IAAI,KAAK,OAAO;AAClB,YAAM,SAAc,EAAE,GAAI,KAAa,IAAI,WAAW,KAAK,QAAQ;AACnE,QAAE,IAAI,KAAK,MAAM;AACjB,aAAO;AAAA,IACT;AAAA,IACA,MAAM,WAAW,OAAO,IAAI,KAAKA,OAAM;AACrC,YAAM,IAAI,OAAO,KAAK;AACtB,YAAM,IAAI,UAAU,KAAK;AACzB,YAAM,MAAM,QAAQ,EAAE;AACtB,YAAM,WAAW,EAAE,IAAI,GAAG;AAC1B,UAAI,CAAC,SAAU,OAAM,OAAO,OAAO,IAAI,MAAM,WAAW,GAAG,EAAE,MAAM,aAAa,SAAS,EAAE,GAAG,EAAE,CAAC;AACjG,YAAM,MAAM,KAAK,IAAI;AACrB,YAAM,iBAAiB,EAAE,IAAI,GAAG,KAAK,SAAS,WAAW;AACzD,UAAIA,OAAM,aAAa,QAAQA,MAAK,cAAc,gBAAgB;AAChE,cAAM,OAAO,OAAO,IAAI,MAAM,kBAAkB,GAAG,EAAE,MAAM,YAAY,SAAS,EAAE,iBAAiBA,MAAK,WAAW,eAAe,eAAe,EAAE,CAAC;AAAA,MACtJ;AACA,YAAM,UAAU,iBAAiB;AACjC,QAAE,IAAI,KAAK,OAAO;AAClB,YAAM,UAAU,EAAE,GAAG,UAAU,GAAG,KAAK,WAAW,KAAK,QAAQ;AAC/D,QAAE,IAAI,KAAK,OAAO;AAClB,aAAO;AAAA,IACT;AAAA,IACA,MAAM,WAAW,OAAO,IAAI;AAC1B,YAAM,IAAI,OAAO,KAAK;AACtB,YAAM,IAAI,UAAU,KAAK;AACzB,YAAM,MAAM,QAAQ,EAAE;AACtB,UAAI,CAAC,EAAE,IAAI,GAAG,EAAG,OAAM,OAAO,OAAO,IAAI,MAAM,WAAW,GAAG,EAAE,MAAM,aAAa,SAAS,EAAE,GAAG,EAAE,CAAC;AACnG,QAAE,OAAO,GAAG;AACZ,QAAE,OAAO,GAAG;AACZ,aAAO,EAAE,IAAI,KAAK;AAAA,IACpB;AAAA,IACA,MAAM,WAAW,OAAO,IAAI,QAAQ;AAClC,YAAM,IAAI,OAAO,KAAK;AACtB,YAAM,MAAM,EAAE,IAAI,QAAQ,EAAE,CAAC,KAAK;AAClC,UAAI,CAAC,IAAK,QAAO;AACjB,UAAI,CAAC,UAAU,OAAO,WAAW,EAAG,QAAO,EAAE,GAAG,IAAI;AACpD,YAAM,MAA+B,CAAC;AACtC,iBAAW,KAAK,OAAQ,KAAI,CAAC,IAAK,IAAY,CAAC;AAC/C,aAAO;AAAA,IACT;AAAA,IACA,MAAM,aAAa,OAAO,KAAK;AAC7B,YAAM,IAAI,OAAO,KAAK;AACtB,YAAM,MAAM,MAAM,KAAK,EAAE,OAAO,CAAC;AAEjC,YAAM,QAAQ,IAAI,WAAW,EAAE,WAAW,OAAO;AACjD,YAAM,OAAO,OAAO,KAAK,KAAK;AAC9B,UAAI,KAAK,CAAC,GAAG,MAAM;AACjB,mBAAW,KAAK,MAAM;AACpB,gBAAM,MAAM,MAAM,CAAC,MAAM,QAAQ,IAAI;AACrC,gBAAM,KAAM,EAAU,CAAC;AACvB,gBAAM,KAAM,EAAU,CAAC;AACvB,cAAI,OAAO,GAAI;AACf,iBAAO,KAAK,KAAK,MAAM,CAAC;AAAA,QAC1B;AAEA,cAAM,MAAM,OAAQ,EAAU,MAAM,EAAE;AACtC,cAAM,MAAM,OAAQ,EAAU,MAAM,EAAE;AACtC,eAAO,IAAI,cAAc,GAAG;AAAA,MAC9B,CAAC;AACD,YAAM,QAAQ,KAAK,IAAI,KAAM,KAAK,IAAI,GAAG,IAAI,SAAS,GAAG,CAAC;AAC1D,YAAM,OAAO,IAAI,MAAM,GAAG,KAAK,EAAE,IAAI,CAAC,MAAM;AAC1C,YAAI,CAAC,IAAI,UAAU,IAAI,OAAO,WAAW,EAAG,QAAO;AACnD,cAAM,IAA6B,CAAC;AACpC,mBAAW,KAAK,IAAI,OAAQ,GAAE,CAAC,IAAK,EAAU,CAAC;AAC/C,eAAO;AAAA,MACT,CAAC;AACD,aAAO,EAAE,MAAM,YAAY,KAAK;AAAA,IAClC;AAAA,EACF;AACF;","names":["opts"]}